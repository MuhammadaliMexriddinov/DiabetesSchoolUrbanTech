// Generated by view binder compiler. Do not edit!
package uz.alpha.qandlidiabetstartup.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.alpha.qandlidiabetstartup.R;

public final class ScreenSignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final AppCompatButton btnSend;

  @NonNull
  public final EditText inputFamilya;

  @NonNull
  public final EditText inputFatherName;

  @NonNull
  public final EditText inputMail;

  @NonNull
  public final EditText inputName;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final EditText inputPhone;

  private ScreenSignUpBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnBack,
      @NonNull AppCompatButton btnSend, @NonNull EditText inputFamilya,
      @NonNull EditText inputFatherName, @NonNull EditText inputMail, @NonNull EditText inputName,
      @NonNull EditText inputPassword, @NonNull EditText inputPhone) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnSend = btnSend;
    this.inputFamilya = inputFamilya;
    this.inputFatherName = inputFatherName;
    this.inputMail = inputMail;
    this.inputName = inputName;
    this.inputPassword = inputPassword;
    this.inputPhone = inputPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenSignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenSignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenSignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnSend;
      AppCompatButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.inputFamilya;
      EditText inputFamilya = ViewBindings.findChildViewById(rootView, id);
      if (inputFamilya == null) {
        break missingId;
      }

      id = R.id.inputFatherName;
      EditText inputFatherName = ViewBindings.findChildViewById(rootView, id);
      if (inputFatherName == null) {
        break missingId;
      }

      id = R.id.inputMail;
      EditText inputMail = ViewBindings.findChildViewById(rootView, id);
      if (inputMail == null) {
        break missingId;
      }

      id = R.id.inputName;
      EditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      EditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.inputPhone;
      EditText inputPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputPhone == null) {
        break missingId;
      }

      return new ScreenSignUpBinding((LinearLayout) rootView, btnBack, btnSend, inputFamilya,
          inputFatherName, inputMail, inputName, inputPassword, inputPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
