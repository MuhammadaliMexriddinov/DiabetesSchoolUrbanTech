// Generated by view binder compiler. Do not edit!
package uz.alpha.qandlidiabetstartup.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.alpha.qandlidiabetstartup.R;

public final class ScreenFindriskBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout b2;

  @NonNull
  public final LinearLayout b3;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ImageView btnInfo;

  @NonNull
  public final AppCompatButton btnScore;

  @NonNull
  public final ConstraintLayout f1;

  @NonNull
  public final ConstraintLayout field5;

  @NonNull
  public final ConstraintLayout field6;

  @NonNull
  public final ConstraintLayout field7;

  @NonNull
  public final ConstraintLayout field8;

  @NonNull
  public final ConstraintLayout field9;

  @NonNull
  public final ImageView img;

  @NonNull
  public final NumberPicker numbers;

  @NonNull
  public final Spinner numbers2;

  @NonNull
  public final Spinner numbers3;

  @NonNull
  public final NumberPicker numbers4;

  @NonNull
  public final NumberPicker numbers5;

  @NonNull
  public final NumberPicker numbers7;

  @NonNull
  public final NumberPicker numbers8;

  @NonNull
  public final NumberPicker numbers9;

  @NonNull
  public final CardView t1;

  @NonNull
  public final CardView t3;

  @NonNull
  public final CardView t4;

  @NonNull
  public final CardView t5;

  @NonNull
  public final CardView t6;

  @NonNull
  public final CardView t7;

  @NonNull
  public final CardView t8;

  @NonNull
  public final CardView t9;

  @NonNull
  public final TextView txt1;

  @NonNull
  public final TextView txt3;

  @NonNull
  public final TextView txt4;

  @NonNull
  public final ContentLoadingProgressBar verfiedProgress;

  private ScreenFindriskBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout b2,
      @NonNull LinearLayout b3, @NonNull ImageView btnBack, @NonNull ImageView btnInfo,
      @NonNull AppCompatButton btnScore, @NonNull ConstraintLayout f1,
      @NonNull ConstraintLayout field5, @NonNull ConstraintLayout field6,
      @NonNull ConstraintLayout field7, @NonNull ConstraintLayout field8,
      @NonNull ConstraintLayout field9, @NonNull ImageView img, @NonNull NumberPicker numbers,
      @NonNull Spinner numbers2, @NonNull Spinner numbers3, @NonNull NumberPicker numbers4,
      @NonNull NumberPicker numbers5, @NonNull NumberPicker numbers7,
      @NonNull NumberPicker numbers8, @NonNull NumberPicker numbers9, @NonNull CardView t1,
      @NonNull CardView t3, @NonNull CardView t4, @NonNull CardView t5, @NonNull CardView t6,
      @NonNull CardView t7, @NonNull CardView t8, @NonNull CardView t9, @NonNull TextView txt1,
      @NonNull TextView txt3, @NonNull TextView txt4,
      @NonNull ContentLoadingProgressBar verfiedProgress) {
    this.rootView = rootView;
    this.b2 = b2;
    this.b3 = b3;
    this.btnBack = btnBack;
    this.btnInfo = btnInfo;
    this.btnScore = btnScore;
    this.f1 = f1;
    this.field5 = field5;
    this.field6 = field6;
    this.field7 = field7;
    this.field8 = field8;
    this.field9 = field9;
    this.img = img;
    this.numbers = numbers;
    this.numbers2 = numbers2;
    this.numbers3 = numbers3;
    this.numbers4 = numbers4;
    this.numbers5 = numbers5;
    this.numbers7 = numbers7;
    this.numbers8 = numbers8;
    this.numbers9 = numbers9;
    this.t1 = t1;
    this.t3 = t3;
    this.t4 = t4;
    this.t5 = t5;
    this.t6 = t6;
    this.t7 = t7;
    this.t8 = t8;
    this.t9 = t9;
    this.txt1 = txt1;
    this.txt3 = txt3;
    this.txt4 = txt4;
    this.verfiedProgress = verfiedProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenFindriskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenFindriskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_findrisk, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenFindriskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b2;
      LinearLayout b2 = ViewBindings.findChildViewById(rootView, id);
      if (b2 == null) {
        break missingId;
      }

      id = R.id.b3;
      LinearLayout b3 = ViewBindings.findChildViewById(rootView, id);
      if (b3 == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnInfo;
      ImageView btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.btnScore;
      AppCompatButton btnScore = ViewBindings.findChildViewById(rootView, id);
      if (btnScore == null) {
        break missingId;
      }

      id = R.id.f1;
      ConstraintLayout f1 = ViewBindings.findChildViewById(rootView, id);
      if (f1 == null) {
        break missingId;
      }

      id = R.id.field5;
      ConstraintLayout field5 = ViewBindings.findChildViewById(rootView, id);
      if (field5 == null) {
        break missingId;
      }

      id = R.id.field6;
      ConstraintLayout field6 = ViewBindings.findChildViewById(rootView, id);
      if (field6 == null) {
        break missingId;
      }

      id = R.id.field7;
      ConstraintLayout field7 = ViewBindings.findChildViewById(rootView, id);
      if (field7 == null) {
        break missingId;
      }

      id = R.id.field8;
      ConstraintLayout field8 = ViewBindings.findChildViewById(rootView, id);
      if (field8 == null) {
        break missingId;
      }

      id = R.id.field9;
      ConstraintLayout field9 = ViewBindings.findChildViewById(rootView, id);
      if (field9 == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.numbers;
      NumberPicker numbers = ViewBindings.findChildViewById(rootView, id);
      if (numbers == null) {
        break missingId;
      }

      id = R.id.numbers2;
      Spinner numbers2 = ViewBindings.findChildViewById(rootView, id);
      if (numbers2 == null) {
        break missingId;
      }

      id = R.id.numbers3;
      Spinner numbers3 = ViewBindings.findChildViewById(rootView, id);
      if (numbers3 == null) {
        break missingId;
      }

      id = R.id.numbers4;
      NumberPicker numbers4 = ViewBindings.findChildViewById(rootView, id);
      if (numbers4 == null) {
        break missingId;
      }

      id = R.id.numbers5;
      NumberPicker numbers5 = ViewBindings.findChildViewById(rootView, id);
      if (numbers5 == null) {
        break missingId;
      }

      id = R.id.numbers7;
      NumberPicker numbers7 = ViewBindings.findChildViewById(rootView, id);
      if (numbers7 == null) {
        break missingId;
      }

      id = R.id.numbers8;
      NumberPicker numbers8 = ViewBindings.findChildViewById(rootView, id);
      if (numbers8 == null) {
        break missingId;
      }

      id = R.id.numbers9;
      NumberPicker numbers9 = ViewBindings.findChildViewById(rootView, id);
      if (numbers9 == null) {
        break missingId;
      }

      id = R.id.t1;
      CardView t1 = ViewBindings.findChildViewById(rootView, id);
      if (t1 == null) {
        break missingId;
      }

      id = R.id.t3;
      CardView t3 = ViewBindings.findChildViewById(rootView, id);
      if (t3 == null) {
        break missingId;
      }

      id = R.id.t4;
      CardView t4 = ViewBindings.findChildViewById(rootView, id);
      if (t4 == null) {
        break missingId;
      }

      id = R.id.t5;
      CardView t5 = ViewBindings.findChildViewById(rootView, id);
      if (t5 == null) {
        break missingId;
      }

      id = R.id.t6;
      CardView t6 = ViewBindings.findChildViewById(rootView, id);
      if (t6 == null) {
        break missingId;
      }

      id = R.id.t7;
      CardView t7 = ViewBindings.findChildViewById(rootView, id);
      if (t7 == null) {
        break missingId;
      }

      id = R.id.t8;
      CardView t8 = ViewBindings.findChildViewById(rootView, id);
      if (t8 == null) {
        break missingId;
      }

      id = R.id.t9;
      CardView t9 = ViewBindings.findChildViewById(rootView, id);
      if (t9 == null) {
        break missingId;
      }

      id = R.id.txt1;
      TextView txt1 = ViewBindings.findChildViewById(rootView, id);
      if (txt1 == null) {
        break missingId;
      }

      id = R.id.txt3;
      TextView txt3 = ViewBindings.findChildViewById(rootView, id);
      if (txt3 == null) {
        break missingId;
      }

      id = R.id.txt4;
      TextView txt4 = ViewBindings.findChildViewById(rootView, id);
      if (txt4 == null) {
        break missingId;
      }

      id = R.id.verfied_progress;
      ContentLoadingProgressBar verfiedProgress = ViewBindings.findChildViewById(rootView, id);
      if (verfiedProgress == null) {
        break missingId;
      }

      return new ScreenFindriskBinding((ConstraintLayout) rootView, b2, b3, btnBack, btnInfo,
          btnScore, f1, field5, field6, field7, field8, field9, img, numbers, numbers2, numbers3,
          numbers4, numbers5, numbers7, numbers8, numbers9, t1, t3, t4, t5, t6, t7, t8, t9, txt1,
          txt3, txt4, verfiedProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
