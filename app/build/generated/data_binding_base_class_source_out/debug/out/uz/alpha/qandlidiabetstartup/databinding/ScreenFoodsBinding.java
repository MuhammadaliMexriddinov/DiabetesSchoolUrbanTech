// Generated by view binder compiler. Do not edit!
package uz.alpha.qandlidiabetstartup.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.alpha.qandlidiabetstartup.R;

public final class ScreenFoodsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bar;

  @NonNull
  public final LinearLayout bar2;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final LinearLayout btnGreen;

  @NonNull
  public final ImageView btnInfo;

  @NonNull
  public final LinearLayout btnRed;

  @NonNull
  public final LinearLayout btnYellow;

  @NonNull
  public final ConstraintLayout f1;

  @NonNull
  public final ConstraintLayout foodsview;

  @NonNull
  public final ViewPager2 pageMain;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  private ScreenFoodsBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout bar,
      @NonNull LinearLayout bar2, @NonNull ImageView btnBack, @NonNull LinearLayout btnGreen,
      @NonNull ImageView btnInfo, @NonNull LinearLayout btnRed, @NonNull LinearLayout btnYellow,
      @NonNull ConstraintLayout f1, @NonNull ConstraintLayout foodsview,
      @NonNull ViewPager2 pageMain, @NonNull View view1, @NonNull View view2, @NonNull View view3) {
    this.rootView = rootView;
    this.bar = bar;
    this.bar2 = bar2;
    this.btnBack = btnBack;
    this.btnGreen = btnGreen;
    this.btnInfo = btnInfo;
    this.btnRed = btnRed;
    this.btnYellow = btnYellow;
    this.f1 = f1;
    this.foodsview = foodsview;
    this.pageMain = pageMain;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenFoodsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenFoodsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_foods, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenFoodsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar;
      LinearLayout bar = ViewBindings.findChildViewById(rootView, id);
      if (bar == null) {
        break missingId;
      }

      id = R.id.bar2;
      LinearLayout bar2 = ViewBindings.findChildViewById(rootView, id);
      if (bar2 == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnGreen;
      LinearLayout btnGreen = ViewBindings.findChildViewById(rootView, id);
      if (btnGreen == null) {
        break missingId;
      }

      id = R.id.btnInfo;
      ImageView btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.btnRed;
      LinearLayout btnRed = ViewBindings.findChildViewById(rootView, id);
      if (btnRed == null) {
        break missingId;
      }

      id = R.id.btnYellow;
      LinearLayout btnYellow = ViewBindings.findChildViewById(rootView, id);
      if (btnYellow == null) {
        break missingId;
      }

      id = R.id.f1;
      ConstraintLayout f1 = ViewBindings.findChildViewById(rootView, id);
      if (f1 == null) {
        break missingId;
      }

      ConstraintLayout foodsview = (ConstraintLayout) rootView;

      id = R.id.page_main;
      ViewPager2 pageMain = ViewBindings.findChildViewById(rootView, id);
      if (pageMain == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      return new ScreenFoodsBinding((ConstraintLayout) rootView, bar, bar2, btnBack, btnGreen,
          btnInfo, btnRed, btnYellow, f1, foodsview, pageMain, view1, view2, view3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
